apiVersion: v1
kind: Namespace
metadata:
  name: jenkins
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    app: jenkins
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins-vol
  namespace: jenkins
  annotations:
    volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    app: jenkins
data:
  jenkins.yaml: |-
    jenkins:
      securityRealm:
        local:
          allowsSignup: false
          enableCaptcha: false
          users:
            - id: admin
              password: admin
      agentProtocols:
      - "JNLP4-connect"
      - "Ping"
      authorizationStrategy:
        loggedInUsersCanDoAnything:
          allowAnonymousRead: false
      clouds:
      - kubernetes:
          containerCapStr: "10"
          jenkinsUrl: "http://jenkins:8080/"
          maxRequestsPerHostStr: "32"
          name: "kubernetes"
          templates:
          - containers:
            - args: "cat"
              command: "/bin/sh -c"
              image: "daocloud.io/buxiaomo/jnlp-slave:4.0.1-1"
              livenessProbe:
                failureThreshold: 0
                initialDelaySeconds: 0
                periodSeconds: 0
                successThreshold: 0
                timeoutSeconds: 0
              name: "jnlp-slave"
              ttyEnabled: true
              workingDir: "/home/jenkins/agent"
            hostNetwork: false
            label: "jnlp-slave"
            name: "jnlp-slave"
            namespace: "jenkins"
            volumes:
            - hostPathVolume:
                hostPath: "/var/run/docker.sock"
                mountPath: "/var/run/docker.sock"
            yamlMergeStrategy: "override"
      crumbIssuer:
        standard:
          excludeClientIPFromCrumb: false
      disableRememberMe: false
      markupFormatter: "plainText"
      mode: NORMAL
      myViewsTabBar: "standard"
      numExecutors: 2
      primaryView:
        all:
          name: "all"
      projectNamingStrategy: "standard"
      quietPeriod: 5
      remotingSecurity:
        enabled: true
      scmCheckoutRetryCount: 0
      slaveAgentPort: 32767
      updateCenter:
        sites:
        - id: "default"
          url: "https://updates.jenkins.io/update-center.json"
      views:
      - all:
          name: "all"
      viewsTabBar: "standard"
    security:
      apiToken:
        creationOfLegacyTokenEnabled: false
        tokenGenerationOnCreationEnabled: false
        usageStatisticsEnabled: true
      sSHD:
        port: -1
    unclassified:
      buildDiscarders:
        configuredBuildDiscarders:
        - "jobBuildDiscarder"
      buildStepOperation:
        enabled: false
      defaultFolderConfiguration:
        healthMetrics:
        - worstChildHealthMetric:
            recursive: true
      extendedEmailPublisher:
        adminRequiredForTemplateTesting: false
        allowUnregisteredEnabled: false
        charset: "UTF-8"
        debugMode: false
        defaultBody: |-
          $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

          Check console output at $BUILD_URL to view the results.
        defaultSubject: "$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!"
        maxAttachmentSize: -1
        maxAttachmentSizeMb: 0
        precedenceBulk: false
        useSsl: false
        watchingEnabled: false
      gitHubConfiguration:
        apiRateLimitChecker: ThrottleForNormalize
      gitHubPluginConfig:
        hookUrl: "http://127.0.0.1:8082/github-webhook/"
      gitSCM:
        createAccountBasedOnEmail: false
        showEntireCommitSummaryInChanges: false
        useExistingAccountWithSameEmail: false
      location:
        adminAddress: "没有配置邮箱地址 <nobody@nowhere>"
        url: "http://127.0.0.1:8082/"
      mailer:
        charset: "UTF-8"
        useSsl: false
      pollSCM:
        pollingThreadCount: 10
      timestamperConfig:
        allPipelines: false
        elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
        systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
    tool:
      git:
        installations:
        - home: "git"
          name: "Default"
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: jenkins
spec:
  selector:
    app: jenkins
  ports:
    - name: admin
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: agent
      port: 32767
      targetPort: 32767
---
kind: Ingress
apiVersion: networking.k8s.io/v1beta1
metadata:
  name: jenkins
  namespace: jenkins
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
    - host: jenkins.xiaomo.cool
      http:
        paths:
          - path: /
            backend:
              serviceName: jenkins
              servicePort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: jenkins
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccount: jenkins
      containers:
        - name: jenkins
          image: buxiaomo/jenkins:2.232
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
            - containerPort: 32767
          resources:
            limits:
              cpu: 1000m
              memory: 2000Mi
            requests:
              cpu: 1000m
              memory: 1000Mi
          livenessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 15
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 15
            failureThreshold: 10
          volumeMounts:
            - name: jenkins-vol
              mountPath: /var/jenkins_home
            - name: casc-configs
              mountPath: /var/jenkins_home/casc_configs/jenkins.yaml
              subPath: jenkins.yaml
            - name: kubeconfig
              mountPath: /root/.kube/config
            - name: docker-sock
              mountPath: /var/run/docker.sock
          env:
            - name: TZ
              value: "Asia/Shanghai"
            - name: LANG
              value: "zh_CN.UTF-8"
            - name: CASC_JENKINS_CONFIG
              value: "/var/jenkins_home/casc_configs/jenkins.yaml"
            - name: JAVA_OPTS
              value: "-Djenkins.install.runSetupWizard=false"
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
      volumes:
        - name: jenkins-vol
          persistentVolumeClaim:
            claimName: jenkins-vol
        - name: casc-configs
          configMap:
            defaultMode: 0600
            name: jenkins
        - name: kubeconfig
          hostPath:
            path: /root/.kube/config
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: jenkins
  name: jenkins-roles
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/attach
  - pods/exec
  - pods/portforward
  - pods/proxy
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins-rolebinding
  namespace: jenkins
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins-roles
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: jenkins